import{_ as n,c as s,o as a,a as e}from"./app.5381168f.js";var t="/handsome-man/assets/programmer-5-years.4deb7709.png",p="/handsome-man/assets/rm-rf2.748d5332.jpeg",o="/handsome-man/assets/change.36926f2b.png",c="/handsome-man/assets/computer-learn.0cde64fa.jpeg",l="/handsome-man/assets/avoid-rm.bac3b5ca.jpeg";const x='{"title":"\u7B80\u4ECB","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7B80\u4ECB","slug":"\u7B80\u4ECB"},{"level":2,"title":"\u80CC\u666F","slug":"\u80CC\u666F"},{"level":3,"title":"\u6254\u7816\u5F15\u7389","slug":"\u6254\u7816\u5F15\u7389"},{"level":2,"title":"\u5386\u53F2","slug":"\u5386\u53F2"},{"level":3,"title":"\u4F7F\u7528javascript\u5199shell\u811A\u672C","slug":"\u4F7F\u7528javascript\u5199shell\u811A\u672C"},{"level":3,"title":"\u539F\u751F\u65B9\u5F0Fchild_process","slug":"\u539F\u751F\u65B9\u5F0Fchild-process"},{"level":3,"title":"shelljs\u6267\u884Clinux\u547D\u4EE4\u884C","slug":"shelljs\u6267\u884Clinux\u547D\u4EE4\u884C"},{"level":3,"title":"\u7528spawn \u6765\u7F16\u5199\u8DE8\u5E73\u53F0 Node.js\u547D\u4EE4","slug":"\u7528spawn-\u6765\u7F16\u5199\u8DE8\u5E73\u53F0-node-js\u547D\u4EE4"},{"level":3,"title":"\u90E8\u5206\u8D44\u6599\u53C2\u8003","slug":"\u90E8\u5206\u8D44\u6599\u53C2\u8003"}],"relativePath":"index.md","lastUpdated":1642579121823}',r={},i=e('<img src="'+t+'" style="width:auto;height:auto;"><h2 id="\u7B80\u4ECB" tabindex="-1">\u7B80\u4ECB <a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a></h2><p><a href="https://anprettyboy.github.io/handsome-man/" target="_blank" rel="noopener noreferrer">2021\u5E74\u5EA6\u6700\u6D41\u884C\u9879\u76EE</a>\u662F<a href="https://github.com/google/zx" target="_blank" rel="noopener noreferrer">zx</a>\uFF0C\u4E00\u4E2A\u7531\u8C37\u6B4C\u63A8\u51FA\u7684\u5168\u65B0\u7684\u5DE5\u5177\uFF0C\u53EF\u7528\u4E8E\u4EE5 JavaScript \u6216 TypeScript \u7F16\u5199\u7B80\u5355\u7684\u547D\u4EE4\u884C\u811A\u672C\u3002</p><p>\u57FA\u672C\u4E0A\u5B83\u53EF\u4EE5\u8BA9\u4F60\u5728\u4EE3\u7801\u4E2D\u5D4C\u5165\u4EFB\u4F55 bash \u8868\u8FBE\u5F0F\uFF08ls, cat, git...\u7B49\u4EFB\u4F55\u547D\u4EE4\uFF01\uFF09\uFF0C\u5E76\u901A\u8FC7<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/await" target="_blank" rel="noopener noreferrer">await\u64CD\u4F5C\u7B26</a>\u4F7F\u7528<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noopener noreferrer">JavaScript template literals</a>\u7684\u7ED3\u679C\u3002</p><p>\u5B83\u5F15\u5165\u4E86\u7531\u51E0\u4E2A\u6D41\u884C\u7684\u8F6F\u4EF6\u5305\u63D0\u4F9B\u7684\u5B9E\u7528\u5DE5\u5177\uFF1A</p><ul><li><a href="https://github.com/node-fetch/node-fetch" target="_blank" rel="noopener noreferrer">node-fetch</a> \u4E0E\u6D4F\u89C8\u5668\u4E2D<a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" target="_blank" rel="noopener noreferrer">Fetch</a>\u6709\u7740\u76F8\u540C\u7684 API\uFF0C \u53EF\u521B\u5EFA HTTP \u8BF7\u6C42\u3002</li><li><a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="noopener noreferrer">fs-extra</a> \u53EF\u5904\u7406\u6587\u4EF6\u7CFB\u7EDF\u64CD\u4F5C\u3002</li><li><a href="https://github.com/sindresorhus/globby" target="_blank" rel="noopener noreferrer">globby</a> \u4EE5\u7528\u6237\u53CB\u597D\u6A21\u5F0F\u6765\u5339\u914D\u7ED9\u5B9A\u7684\u6587\u4EF6\u540D\u3002</li></ul><h2 id="\u80CC\u666F" tabindex="-1">\u80CC\u666F <a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a></h2><p>&quot;Bash \u5F88\u68D2\uFF0C\u4F46\u662F\u5728\u7F16\u5199\u811A\u672C\u65F6\uFF0C\u4EBA\u4EEC\u901A\u5E38\u4F1A\u9009\u62E9\u66F4\u65B9\u4FBF\u7684\u7F16\u7A0B\u8BED\u8A00\u3002 JavaScript \u662F\u4E00\u4E2A\u5B8C\u7F8E\u7684\u9009\u62E9\uFF0C\u4F46\u6807\u51C6\u7684 Node.js \u5E93\u5728\u4F7F\u7528\u4E4B\u524D\u9700\u8981\u989D\u5916\u7684\u9EBB\u70E6\u3002 zx \u5305\u63D0\u4F9B\u4E86\u56F4\u7ED5 child_process \u7684\u6709\u7528\u5305\u88C5\u5668\uFF0C\u8F6C\u4E49\u53C2\u6570\u5E76\u63D0\u4F9B\u5408\u7406\u7684\u9ED8\u8BA4\u503C\u3002&quot;</p><h3 id="\u6254\u7816\u5F15\u7389" tabindex="-1">\u6254\u7816\u5F15\u7389 <a class="header-anchor" href="#\u6254\u7816\u5F15\u7389" aria-hidden="true">#</a></h3><img src="'+p+'" style="width:auto;height:auto;"><p>&quot;\u60F3\u8C61\u4E00\u4E0B\uFF0C\u4F60\u672C\u6765\u60F3\u5220\u9664\uFF1Arm -rf $dir/<em>\u7136\u540Edir\u662F\u7A7A\u7684\u65F6\u5019\uFF0C\u53D8\u6210\u4E86\u4EC0\u4E48\uFF1Frm -rf\u662F\u5220\u9664\u547D\u4EE4\uFF0C$dir\u662F\u7A7A\u7684\u8BDD\uFF0C\u76F8\u5F53\u4E8E\u6267\u884C rm -rf /</em>,\u8FD9\u662F\u5220\u9664\u6240\u6709\u6587\u4EF6\u548C\u6587\u4EF6\u5939\u3002\u3002\u3002\u7136\u540E\uFF0C\u4F60\u7684\u7CFB\u7EDF\u5C31\u6CA1\u4E86\uFF0C\u8FD9\u5C31\u662F\u4F20\u8BF4\u4E2D\u7684\u5220\u5E93\u8DD1\u8DEF\u5417~~~~&quot;</p><h2 id="\u5386\u53F2" tabindex="-1">\u5386\u53F2 <a class="header-anchor" href="#\u5386\u53F2" aria-hidden="true">#</a></h2><img src="'+o+`" style="width:auto;height:auto;"><h3 id="\u4F7F\u7528javascript\u5199shell\u811A\u672C" tabindex="-1">\u4F7F\u7528javascript\u5199shell\u811A\u672C <a class="header-anchor" href="#\u4F7F\u7528javascript\u5199shell\u811A\u672C" aria-hidden="true">#</a></h3><p>#! \u662F\u4E00\u4E2A\u7EA6\u5B9A\u7684\u6807\u8BB0\uFF0C\u5B83\u544A\u8BC9\u7CFB\u7EDF\u8FD9\u4E2A\u811A\u672C\u9700\u8981\u4EC0\u4E48\u89E3\u91CA\u5668\u6765\u8FD0\u884C\uFF0C\u5373\uFF1A\u4F7F\u7528\u54EA\u4E00\u79CD shell\u3002#!\u88AB\u79F0\u4E3A<a href="https://zh.wikipedia.org/wiki/Shebang" target="_blank" rel="noopener noreferrer">shebang\uFF08\u4E5F\u79F0\u4E3A Hashbang\uFF09</a>,\u4F8B\u5982\u4F7F\u7528 bash\uFF1A#! /bin/bash</p><p>\u6700\u7B80\u5355\u7684\u811A\u672C</p><div class="language-shell"><pre><code><span class="token shebang important">#!/usr/bin/env node</span>
console.log<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4FDD\u5B58\u4E3Atest\uFF0C\u6267\u884C\u8BE5\u811A\u672C node test,\u7136\u540E\u53EF\u4EE5\u5728\u63A7\u5236\u53F0\u83B7\u5F97\u8F93\u51FA\u3002</p><p>\u66F4\u8FDB\u4E00\u6B65\uFF0C\u6211\u4EEC\u7ED9\u8BE5\u811A\u672C\u4E00\u4E2A\u6267\u884C\u6743\u9650\uFF0C</p><div class="language-shell"><pre><code><span class="token function">chmod</span> <span class="token number">755</span> <span class="token builtin class-name">test</span>
</code></pre></div><h4 id="\u4F8B\u5B50-\u8BFB\u53D6\u7ED9\u5B9A\u6587\u4EF6\u5939\u4E0B\u6240\u6709\u7684\u6587\u4EF6" tabindex="-1">\u4F8B\u5B50-\u8BFB\u53D6\u7ED9\u5B9A\u6587\u4EF6\u5939\u4E0B\u6240\u6709\u7684\u6587\u4EF6 <a class="header-anchor" href="#\u4F8B\u5B50-\u8BFB\u53D6\u7ED9\u5B9A\u6587\u4EF6\u5939\u4E0B\u6240\u6709\u7684\u6587\u4EF6" aria-hidden="true">#</a></h4><p>\u8BFB\u53D6\u5F53\u524D\u6587\u4EF6\u5939\u4F7F\u7528 fs.readdirSync\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u4E86\u7ED9\u5B9A\u6587\u4EF6\u5939\u4E0B\u7684\u6240\u6709\u5B50\u6587\u4EF6\u5939\u6216\u6587\u4EF6,</p><p>\u4E3E\u4E2A\u6817\u5B50\uFF0C\u5728\u5F53\u524D\u76EE\u5F55\u6211\u6709\u4E2Atest\u6587\u4EF6\u5939</p><div class="language-shell"><pre><code><span class="token builtin class-name">test</span>
\u251C\u2500\u2500 <span class="token number">1</span>.html
\u251C\u2500\u2500 <span class="token number">1</span>.txt
\u2514\u2500\u2500 files
</code></pre></div><p>fs.readdirSync(&#39;./test&#39;) \u7684\u8F93\u51FA\u4E3A [ &#39;1.html&#39;, &#39;1.txt&#39;, &#39;files&#39; ]</p><p>\u65B0\u5EFA\u4E2A\u6587\u4EF6\uFF0CgetFile\uFF0C\u7528\u6765\u5B58\u653E\u811A\u672C\u4EE3\u7801</p><h4 id="\u5199\u6B7B\u7684\u6587\u4EF6\u5939" tabindex="-1">\u5199\u6B7B\u7684\u6587\u4EF6\u5939 <a class="header-anchor" href="#\u5199\u6B7B\u7684\u6587\u4EF6\u5939" aria-hidden="true">#</a></h4><p>\u8BFB\u53D6\u7ED9\u5B9A\u76EE\u5F55\u4E0B\u6240\u6709\u6587\u4EF6\u5E76\u8F93\u51FA\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-shell"><pre><code><span class="token shebang important">#!/usr/bin/env node</span>

const testFolder <span class="token operator">=</span> <span class="token string">&#39;./test/&#39;</span><span class="token punctuation">;</span>
const fs <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fs.readdirSync<span class="token punctuation">(</span>testFolder<span class="token punctuation">)</span>.forEach<span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  console.log<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="\u83B7\u53D6\u7528\u6237\u8F93\u5165" tabindex="-1">\u83B7\u53D6\u7528\u6237\u8F93\u5165 <a class="header-anchor" href="#\u83B7\u53D6\u7528\u6237\u8F93\u5165" aria-hidden="true">#</a></h4><p>\u4EE5\u4E0A\u4EE3\u7801\u7684\u7ED9\u5B9A\u7684\u8DEF\u5F84\u662F\u5199\u6B7B\u7684\uFF0C\u6211\u4EEC\u9700\u8981\u4F5C\u4E3A\u53C2\u6570\u8F93\u5165\uFF0Cnodejs\u8BFB\u53D6\u7528\u6237\u8F93\u5165\u7684\u65B9\u6CD5:</p><div class="language-shell"><pre><code>const <span class="token punctuation">[</span>nodeEnv,dir,<span class="token punctuation">..</span>.args<span class="token punctuation">]</span><span class="token operator">=</span>process.argv //args\u662F\u7528\u6237\u8F93\u5165\u7684\u53C2\u6570
</code></pre></div><p>\u4FEE\u6539\u811A\u672C\u4EE3\u7801\uFF1A</p><div class="language-shell"><pre><code><span class="token shebang important">#!/usr/bin/env node</span>

const fs <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
const <span class="token punctuation">[</span>nodeEnv,dir,<span class="token punctuation">..</span>.args<span class="token punctuation">]</span><span class="token operator">=</span>process.argv

// \u83B7\u53D6\u7528\u6237\u8F93\u5165\u7684\u8DEF\u5F84
const <span class="token assign-left variable">folder</span><span class="token operator">=</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

fs.readdirSync<span class="token punctuation">(</span>folder<span class="token punctuation">)</span>.forEach<span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  console.log<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u73B0\u5728\u6267\u884C\u811A\u672C\u65F6\uFF0C\u8DEF\u5F84\u5C31\u53EF\u4EE5\u81EA\u5DF1\u8F93\u5165\u4E86</p><div class="language-shell"><pre><code><span class="token function">node</span> getFile \u4F60\u7684\u8DEF\u5F84
</code></pre></div><h3 id="\u539F\u751F\u65B9\u5F0Fchild-process" tabindex="-1">\u539F\u751F\u65B9\u5F0Fchild_process <a class="header-anchor" href="#\u539F\u751F\u65B9\u5F0Fchild-process" aria-hidden="true">#</a></h3><p>nodejs\u53EF\u4EE5\u4F7F\u7528child_process\u6A21\u5757\u65B0\u5EFA\u5B50\u8FDB\u7A0B\uFF0C\u7528\u6765\u6267\u884Cunit\u7CFB\u7EDF\u547D\u4EE4\uFF0C\u5199\u4E2A\u6D4B\u8BD5\u7684\u4F8B\u5B50\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-shell"><pre><code><span class="token shebang important">#!/usr/bin/env node</span>


//-----\u540C\u6B65\u5199\u6CD5\u{1F447}
const <span class="token assign-left variable">execSync</span><span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>.execSync

const <span class="token assign-left variable">res</span><span class="token operator">=</span>execSync<span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">)</span>
console.log<span class="token punctuation">(</span><span class="token string">&quot;res&quot;</span>, res.toString<span class="token punctuation">(</span><span class="token punctuation">))</span>


// ----- \u5F02\u6B65\u5199\u6CD5\u{1F447}
const <span class="token assign-left variable">exec</span><span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>.exec
exec<span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span>,<span class="token punctuation">(</span>err,stdout,stderr<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
   if<span class="token punctuation">(</span>err<span class="token punctuation">)</span>throw err
   console.log<span class="token punctuation">(</span>stdout<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="shelljs\u6267\u884Clinux\u547D\u4EE4\u884C" tabindex="-1">shelljs\u6267\u884Clinux\u547D\u4EE4\u884C <a class="header-anchor" href="#shelljs\u6267\u884Clinux\u547D\u4EE4\u884C" aria-hidden="true">#</a></h3><p>\u9996\u5148\u9700\u8981\u5B89\u88C5shelljs</p><div class="language-"><pre><code>npm i shelljs -S
</code></pre></div><p>shelljs\u63D0\u4F9B\u4E86\u5F88\u591A\u65B9\u6CD5\uFF0C\u6700\u5E38\u7528\u7684\u662Fexec\uFF0C\u4E3E\u4E2A\u6817\u5B50</p><div class="language-shell"><pre><code>const <span class="token assign-left variable">shell</span><span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&#39;shelljs&#39;</span><span class="token punctuation">)</span>
/**
 * \u51FD\u6570\u7B7E\u540D\uFF1Aexec<span class="token punctuation">(</span>command <span class="token punctuation">[</span>, options<span class="token punctuation">]</span> <span class="token punctuation">[</span>, callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
 * command:\u8981\u6267\u884C\u7684\u547D\u4EE4
 * callback:\u56DE\u8C03\u51FD\u6570\uFF0C\u5BF9command\u7684\u8F93\u51FA\u8FDB\u884C\u5904\u7406
 * options:
 *  async: \u5F02\u6B65\u6267\u884C.\u5982\u679Ccallback\u63D0\u4F9B\u4E86\uFF0C\u4F1A\u5FFD\u7565\u8BE5\u53C2\u6570\u5E76\u5F3A\u5236\u5F02\u6B65\u6267\u884C  <span class="token punctuation">(</span>default: <span class="token boolean">false</span><span class="token punctuation">)</span>
 *  fatal: Exit upon error <span class="token punctuation">(</span>default: <span class="token boolean">false</span><span class="token punctuation">)</span>.
 *  silent: \u4E0D\u5728console\u4E2D\u8F93\u51FA<span class="token punctuation">(</span>default: <span class="token boolean">false</span><span class="token punctuation">)</span>.
 *  encoding: \u8BBE\u7F6Estdout\u548Cstderr\u7684\u7F16\u7801 <span class="token punctuation">(</span>default: <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
 */

//\u8F93\u51FAls\u7684\u7ED3\u679C
shell.exec<span class="token punctuation">(</span><span class="token string">&quot;ls&quot;</span><span class="token punctuation">)</span>

//callback<span class="token punctuation">(</span>code,stdout,stderr<span class="token punctuation">)</span>  code\u4E3A0\u5219\u6210\u529F\uFF0C\u5426\u5219\u5931\u8D25
shell.exec<span class="token punctuation">(</span><span class="token string">&quot;dir&quot;</span>,<span class="token punctuation">{</span>silent:true<span class="token punctuation">}</span>,<span class="token punctuation">(</span>code,stdout,stderr<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

shell.exec<span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span>,<span class="token punctuation">{</span>silent:true<span class="token punctuation">}</span>,<span class="token punctuation">(</span>code,stdout,stderr<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    console.log<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
    console.log<span class="token punctuation">(</span>stdout<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><img src="`+c+`" style="width:auto;height:auto;"><p>\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\uFF0C\u5E38\u4F1A\u9047\u5230\u5982\u4E0B\u547D\u4EE4\uFF1A</p><div class="language-shell"><pre><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit -m <span class="token string">&#39;*****&#39;</span>
<span class="token function">git</span> push
</code></pre></div><ol><li>\u5728\u6839\u76EE\u5F55\u4E0B\u65B0\u5EFA\u6587\u4EF6shell.js\uFF0C\u5185\u5BB9\u5982\u4E0B\uFF1A</li></ol><div class="language-shell"><pre><code><span class="token builtin class-name">let</span> shell <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;shelljs&#39;</span><span class="token punctuation">)</span>
<span class="token builtin class-name">let</span> name <span class="token operator">=</span> process.argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;Auto-commit&#39;</span><span class="token punctuation">;</span>
<span class="token builtin class-name">let</span> <span class="token builtin class-name">exec</span> <span class="token operator">=</span> shell.exec

<span class="token keyword">if</span> <span class="token punctuation">(</span>exec<span class="token punctuation">(</span><span class="token string">&#39;git add .&#39;</span><span class="token punctuation">)</span>.code <span class="token operator">!=</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    echo<span class="token punctuation">(</span><span class="token string">&#39;Error: Git add failed&#39;</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>exec<span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">git</span> commit -am <span class="token string">&quot;<span class="token variable">\${name}</span>&quot;</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>.code <span class="token operator">!=</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    echo<span class="token punctuation">(</span><span class="token string">&#39;Error: Git commit failed&#39;</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>exec<span class="token punctuation">(</span><span class="token string">&#39;git push&#39;</span><span class="token punctuation">)</span>.code <span class="token operator">!=</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    echo<span class="token punctuation">(</span><span class="token string">&#39;Error: Git commit failed&#39;</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="2"><li>\u53EA\u7528\u4E00\u6761\u547D\u4EE4\u6267\u884C\u4EE5\u4E0A\u6240\u6709\u4EFB\u52A1\uFF0C\u5728package.json\u4E2D\u52A0\u5165,\u65B9\u6CD5\u5982\u4E0B:</li></ol><div class="language-shell"><pre><code><span class="token string">&quot;script&quot;</span>:<span class="token punctuation">{</span>
    <span class="token string">&quot;push&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;node ./shell.js&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li>\u6267\u884C</li></ol><div class="language-shell"><pre><code><span class="token function">npm</span> run push \u6D4B\u8BD5shelljs\u63D0\u4EA4\u4EE3\u7801
</code></pre></div><h3 id="\u7528spawn-\u6765\u7F16\u5199\u8DE8\u5E73\u53F0-node-js\u547D\u4EE4" tabindex="-1">\u7528spawn \u6765\u7F16\u5199\u8DE8\u5E73\u53F0 Node.js\u547D\u4EE4 <a class="header-anchor" href="#\u7528spawn-\u6765\u7F16\u5199\u8DE8\u5E73\u53F0-node-js\u547D\u4EE4" aria-hidden="true">#</a></h3><p>\u5982\u679C\u60F3\u8981\u7F16\u5199\u8DE8\u5E73\u53F0\u7684 spawn \u547D\u4EE4\uFF0C\u800C\u53C8\u4E0D\u60F3\u589E\u52A0\u989D\u5916\u7684\u5F00\u9500\u7684\u8BDD\uFF0C\u53EF\u4EE5\u8FD9\u6837\u5199</p><div class="language-shell"><pre><code>const process <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
const <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

spawn<span class="token punctuation">(</span><span class="token string">&#39;npm&#39;</span>, <span class="token punctuation">{</span>
 stdio: <span class="token string">&#39;inherit&#39;</span>,
 // \u4EC5\u5728\u5F53\u524D\u8FD0\u884C\u73AF\u5883\u4E3A Windows \u65F6\uFF0C\u624D\u4F7F\u7528 shell
 shell: process.platform <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">&#39;win32&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><h4 id="cross-spawn\u7B2C\u4E09\u65B9\u6A21\u5757" tabindex="-1">cross-spawn\u7B2C\u4E09\u65B9\u6A21\u5757 <a class="header-anchor" href="#cross-spawn\u7B2C\u4E09\u65B9\u6A21\u5757" aria-hidden="true">#</a></h4><p>\u5173\u4E8E spawn \u51FD\u6570\u7684\u8DE8\u5E73\u53F0\u5199\u6CD5\uFF0C\u9664\u4E86\u81EA\u5DF1\u7F16\u5199\u4EE3\u7801\u7684\u65F6\u5019\u505A\u5904\u7406\uFF0C\u4E5F\u6709\u7B2C\u4E09\u65B9\u6A21\u5757\u5C01\u88C5\u597D\u4E86\u76F8\u5173\u7EC6\u8282\uFF0C\u5982 cross-spawn\u3002</p><p>\u4F7F\u7528\u8BE5\u6A21\u5757\uFF0C\u53EF\u4EE5\u5728\u8C03\u7528 spawn \u51FD\u6570\u65F6\uFF0C\u81EA\u52A8\u6839\u636E\u5F53\u524D\u7684\u8FD0\u884C\u5E73\u53F0\uFF0C\u6765\u51B3\u5B9A\u662F\u5426\u751F\u6210\u4E00\u4E2A shell \u6765\u6267\u884C\u6240\u7ED9\u7684\u547D\u4EE4\u3002\u5BF9\u547D\u4EE4\u548C\u53C2\u6570\u4E2D\u7684\u5B57\u7B26\u8FDB\u884C\u8F6C\u4E49\u66F4\u4E3A\u65B9\u4FBF\u3002</p><img src="`+l+`" style="width:auto;height:auto;"> ### Google zx <p>\u201CBash\u5F88\u597D\uFF0C\u6240\u4EE5\u6211\u9009\u62E9JavaScript\u201D</p><p>\u524D\u7AEF\u5F00\u53D1\u62FF\u624B\u7684\u4E0D\u5C31\u662F Javascript, \u55EF \u5F00\u6574</p><h4 id="\u5B89\u88C5\u548C\u4F7F\u7528" tabindex="-1">\u5B89\u88C5\u548C\u4F7F\u7528 <a class="header-anchor" href="#\u5B89\u88C5\u548C\u4F7F\u7528" aria-hidden="true">#</a></h4><div class="language-shell"><pre><code><span class="token function">npm</span> i -g zx
</code></pre></div><p>\u5B89\u88C5\u597D zx \u4E4B\u540E\uFF0C\u5C06\u7F16\u5199\u7684\u811A\u672C\u653E\u5728 .mjs \u540E\u7F00\u7684\u6587\u4EF6\u4E2D\uFF0C\u6216\u8005\u4F7F\u7528 .js \u540E\u7F00\uFF0C\u4F46\u662F\u9700\u8981\u4F7F\u7528 void async function () {...}() \u5BF9\u811A\u672C\u8FDB\u884C\u5305\u88C5\u3002</p><p>\u4F7F\u7528\u65F6\u9700\u6CE8\u610F\u4EE5\u4E0B\u51E0\u70B9\uFF1A</p><h4 id="_1\u3001\u811A\u672C\u9700\u8981\u5305\u542B\u4EE5\u4E0B\u6587\u4EF6\u5934\uFF1A" tabindex="-1">1\u3001\u811A\u672C\u9700\u8981\u5305\u542B\u4EE5\u4E0B\u6587\u4EF6\u5934\uFF1A <a class="header-anchor" href="#_1\u3001\u811A\u672C\u9700\u8981\u5305\u542B\u4EE5\u4E0B\u6587\u4EF6\u5934\uFF1A" aria-hidden="true">#</a></h4><div class="language-"><pre><code>#!/usr/bin/env zx
</code></pre></div><h4 id="_2-\u4E3A\u811A\u672C\u6DFB\u52A0\u6267\u884C\u6743\u9650\u518D\u8FD0\u884C" tabindex="-1">2. \u4E3A\u811A\u672C\u6DFB\u52A0\u6267\u884C\u6743\u9650\u518D\u8FD0\u884C <a class="header-anchor" href="#_2-\u4E3A\u811A\u672C\u6DFB\u52A0\u6267\u884C\u6743\u9650\u518D\u8FD0\u884C" aria-hidden="true">#</a></h4><div class="language-"><pre><code>$ chmod +x ./script.mjs
$ ./script.mjs

# \u6216\u8005\u4F7F\u7528\u8FD9\u4E2A\u547D\u4EE4
$ zx ./script.mjs
</code></pre></div><h4 id="zx-\u5E38\u7528\u547D\u4EE4" tabindex="-1">zx \u5E38\u7528\u547D\u4EE4 <a class="header-anchor" href="#zx-\u5E38\u7528\u547D\u4EE4" aria-hidden="true">#</a></h4><h5 id="command" tabindex="-1">$<code>command</code> <a class="header-anchor" href="#command" aria-hidden="true">#</a></h5><p>\u4F7F\u7528 child_process \u5305\u4E2D\u63D0\u4F9B\u7684 exec \u51FD\u6570\uFF0C\u53EF\u4EE5\u628A\u5B57\u7B26\u4E32\u5F53\u505A\u547D\u4EE4\u6267\u884C\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A Promise(ProcessOutput) \u5BF9\u8C61\u3002\u901A\u8FC7\u7684\u4E00\u5207\${...}\u90FD\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E49\u548C\u5F15\u7528\u3002</p><div class="language-shell"><pre><code><span class="token builtin class-name">let</span> count <span class="token operator">=</span> parseInt<span class="token punctuation">(</span>await $<span class="token variable"><span class="token variable">\`</span><span class="token function">ls</span> -1 <span class="token operator">|</span> <span class="token function">wc</span> -l<span class="token variable">\`</span></span><span class="token punctuation">)</span>
console.log<span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>Files count: $<span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>
</code></pre></div><p>\u8981\u5E76\u884C\u4E0A\u4F20\u6587\u4EF6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u811A\u672C\uFF1A</p><div class="language-shell"><pre><code><span class="token builtin class-name">let</span> hosts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span>
await Promise.all<span class="token punctuation">(</span>hosts.map<span class="token punctuation">(</span>host <span class="token operator">=</span><span class="token operator">&gt;</span>
  $<span class="token variable"><span class="token variable">\`</span><span class="token function">rsync</span> -azP ./src $<span class="token punctuation">{</span>host<span class="token punctuation">}</span>:/var/www<span class="token variable">\`</span></span>
<span class="token punctuation">))</span>
</code></pre></div><p>\u8981\u4FEE\u6539\u5DE5\u4F5C\u8DEF\u5F84\uFF0C\u53EF\u4EE5\u4F7F\u7528 cd() \u65B9\u6CD5\uFF1A</p><div class="language-shell"><pre><code>cd<span class="token punctuation">(</span><span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">)</span>
// \u5C06\u8F93\u51FA /tmp
await $<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>
</code></pre></div><p>fetch() \u65B9\u6CD5\u662F\u5BF9 node-fetch \u5305\u7684\u5305\u88C5\uFF1A</p><div class="language-shell"><pre><code><span class="token builtin class-name">let</span> resp <span class="token operator">=</span> await fetch<span class="token punctuation">(</span><span class="token string">&#39;http://wttr.in&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>resp.ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console.log<span class="token punctuation">(</span>await resp.text<span class="token punctuation">(</span><span class="token punctuation">))</span>
<span class="token punctuation">}</span>
</code></pre></div><p>question() \u65B9\u6CD5\u662F\u5BF9 readline \u5305\u7684\u5305\u88C5\uFF1A</p><div class="language-shell"><pre><code><span class="token builtin class-name">type</span> QuestionOptions <span class="token operator">=</span> <span class="token punctuation">{</span> choices: string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> question<span class="token punctuation">(</span>query: string, options?: QuestionOptions<span class="token punctuation">)</span>: Promise<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>
</code></pre></div><p>\u7528\u6CD5\uFF1A</p><div class="language-shell"><pre><code><span class="token builtin class-name">let</span> username <span class="token operator">=</span> await question<span class="token punctuation">(</span><span class="token string">&#39;What is your username? &#39;</span><span class="token punctuation">)</span>
<span class="token builtin class-name">let</span> token <span class="token operator">=</span> await question<span class="token punctuation">(</span><span class="token string">&#39;Choose env variable: &#39;</span>, <span class="token punctuation">{</span>
  choices: Object.keys<span class="token punctuation">(</span>process.<wbr>env<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5BF9\u4E8E chalk \u5305\uFF0C\u4E0D\u9700\u8981\u5BFC\u5165\u5C31\u53EF\u4EE5\u76F4\u63A5\u7528\uFF1A</p><div class="language-shell"><pre><code>console.log<span class="token punctuation">(</span>chalk.blue<span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">))</span>
</code></pre></div><p>fs \u5305\uFF0C\u5BFC\u5165\u5C31\u53EF\u4EE5\u76F4\u63A5\u7528\uFF1A</p><div class="language-shell"><pre><code><span class="token builtin class-name">let</span> content <span class="token operator">=</span> await fs.readFile<span class="token punctuation">(</span><span class="token string">&#39;./package.json&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>Promisified \u9ED8\u8BA4\u88AB\u5F15\u5165\u4E86\uFF0C\u7B49\u540C\u4E8E\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-shell"><pre><code><span class="token function">import</span> <span class="token punctuation">{</span>promises as fs<span class="token punctuation">}</span> from <span class="token string">&#39;fs&#39;</span>
</code></pre></div><p>os \u5305\uFF0C\u5BFC\u5165\u5C31\u53EF\u4EE5\u76F4\u63A5\u7528\uFF1A</p><div class="language-shell"><pre><code>await $<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">cd</span> $<span class="token punctuation">{</span>os.homedir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> example<span class="token variable">\`</span></span>
</code></pre></div><p>zx \u8FD8\u53EF\u4EE5\u4ECE\u5176\u4ED6\u811A\u672C\u5BFC\u5165\uFF1A</p><div class="language-shell"><pre><code><span class="token shebang important">#!/usr/bin/env node</span>
<span class="token function">import</span> <span class="token punctuation">{</span>$<span class="token punctuation">}</span> from <span class="token string">&#39;zx&#39;</span>
await $<span class="token variable"><span class="token variable">\`</span><span class="token function">date</span><span class="token variable">\`</span></span>
</code></pre></div><p>\u4F20\u9012\u73AF\u5883\u53D8\u91CF\uFF1A</p><div class="language-shell"><pre><code>process.<wbr>env.FOO <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>
await $<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $FOO<span class="token variable">\`</span></span>
</code></pre></div><p>\u6267\u884C\u8FDC\u7A0B\u811A\u672C\uFF1A</p><div class="language-shell"><pre><code>zx https://your-remote-server.com/example-script.mjs
</code></pre></div><h3 id="\u90E8\u5206\u8D44\u6599\u53C2\u8003" tabindex="-1">\u90E8\u5206\u8D44\u6599\u53C2\u8003 <a class="header-anchor" href="#\u90E8\u5206\u8D44\u6599\u53C2\u8003" aria-hidden="true">#</a></h3><ul><li><a href="https://www.sitepoint.com/google-zx-write-node-shell-scripts/" target="_blank" rel="noopener noreferrer">How to Write Shell Scripts in Node with Google\u2019s zx Library</a></li><li><a href="https://juejin.cn/post/6987307041321091079" target="_blank" rel="noopener noreferrer">shelljs\u524D\u7AEF\u81EA\u52A8\u5316</a></li><li><a href="https://juejin.cn/post/6992743763844005902" target="_blank" rel="noopener noreferrer">\u4F7F\u7528javascript\u5199shell\u811A\u672C</a></li><li><a href="https://juejin.cn/post/6979989936137043999" target="_blank" rel="noopener noreferrer">nodejs\u5199bash\u811A\u672C\u7EC8\u6781\u65B9\u6848\uFF01</a></li><li><a href="https://juejin.cn/post/7048286354861457416" target="_blank" rel="noopener noreferrer">ZX \u7528JavaScript\u5199bash\u811A\u672C</a></li><li><a href="https://juejin.cn/post/6979989936137043999#heading-4" target="_blank" rel="noopener noreferrer">nodejs\u5199bash\u811A\u672C\u7EC8\u6781\u65B9\u6848\uFF01</a></li><li><a href="https://juejin.cn/post/7011464539141046279" target="_blank" rel="noopener noreferrer">zx, \u5982\u4F55\u7528Javascript\u4F18\u96C5\u7684\u4E66\u5199\u811A\u672C\u547D\u4EE4</a></li><li><a href="https://juejin.cn/post/7002536429314277384" target="_blank" rel="noopener noreferrer">Google zx \u6E90\u7801\u6D45\u6790</a></li><li><a href="https://atomcloud.cn/google-script-tool-zx/" target="_blank" rel="noopener noreferrer">Google \u811A\u672C\u5DE5\u5177 zx \u4F7F\u7528\u6559\u7A0B</a></li><li><a href="https://www.sitepoint.com/google-zx-write-node-shell-scripts/" target="_blank" rel="noopener noreferrer">How to Write Shell Scripts in Node with Google\u2019s zx Library</a></li><li><a href="https://www.infoq.com/news/2021/05/zx-javascript-cli-scripts/" target="_blank" rel="noopener noreferrer">Zx - a Tool for Writing Better Scripts</a></li><li><a href="https://blog.tericcabrel.com/write-a-better-bash-script-with-zx/" target="_blank" rel="noopener noreferrer">Write better bash scripts with Zx</a></li><li><a href="https://blog.mastykarz.nl/create-scripts-javascript-zx/" target="_blank" rel="noopener noreferrer">Create scripts in JavaScript with zx</a></li><li><a href="https://www.mo4tech.com/google-zx-source-code-analysis.html" target="_blank" rel="noopener noreferrer">Google ZX source code analysis</a></li></ul>`,101),u=[i];function k(d,h,g,b,f,m){return a(),s("div",null,u)}var w=n(r,[["render",k]]);export{x as __pageData,w as default};
